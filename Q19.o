010011011    // mov_int i3 r3 
100100001    // movi 1 
010011001    // mov_int i3 r1 
100101110    // movi 14 
001011001    // cmp i3 r1 
110111000    // bne 24 
010000100    // mov_int i0 r4 
010111011    // load_inc r3 r3 
001111101    // mov i3 r5 
010011111    // mov_int i3 r7 
010000010    // mov_int i0 r2 
000001010    // add r1 r2 
100101110    // movi 14 
001011010    // cmp i3 r2 
110101101    // bne 13 
010111110    // load_inc r3 r6 
011111010    // xor r3 r2 
001110111    // mov r2 r7 
000110111    // and r2 r7 
000010111    // add r2 r7 
100001000    // shf r2 0 0 
101011110    // cmp_int i3 r6 
1101-0101    // bne -5 
100100001    // movi 1 
010011001    // mov_int i3 r1 
000001010    // add r1 r2 
110001100    // ble 12 
001111111    // mov r3 r7 
101110000    // ba 16 
111000000    // inc 
101111100    // ba 28 
