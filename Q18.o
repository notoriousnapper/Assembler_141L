010101010    // load_inc r1 r2 
100101001    // movi 9 
010011101    // mov_int i3 r5 
010110101    // load_inc r2 r5 
100101111    // movi 15 
010011011    // mov_int i3 r3 
000111101    // and r3 r5 
100100010    // movi 2 
010011110    // mov_int i3 r6 
100001011    // shf r2 1 1 
100100100    // movi 4 
010011010    // mov_int i3 r2 
100001011    // shf r2 1 1 
100100101    // movi 5 
010011100    // mov_int i3 r4 
001111110    // mov r3 r6 
010111111    // load_inc r3 r7 
010000111    // mov_int i0 r7 
001101011    // mov r1 r3 
000111111    // and r3 r7 
001011111    // cmp r3 r7 
110100010    // bne 2 
000001111    // add r1 r7 
100011100    // shf r7 0 0 
111000000    // inc 
101001100    // cmp_int i1 r4 
1101-1001    // bne -9 
100101001    // movi 9 
010011011    // mov_int i3 r3 
000010011    // add r2 r3 
010111111    // load_inc r3 r7 
000001010    // add r1 r2 
011010011    // st r2 r3 
010011111    // mov_int i3 r7 
111000000    // inc 
101000010    // cmp_int i0 r2 
110110100    // bne 20 
